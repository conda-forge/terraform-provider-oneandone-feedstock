{% set provider = "OneAndOne" %}
{% set goname = "github.com/terraform-providers/terraform-provider-"+provider.lower() %}
{% set version = "1.3.0" %}

{% set name = goname.split('/')[-1] %}
{% set pkg_src = ('gopath/src/'+goname).replace("/",os.sep) %}

{% set plugin_dir = os.sep.join(["plugins", "registry.terraform.io", "hashicorp", provider.lower(), version]) %}
{% set x4_plugin = name + '_v' + version %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - folder:  {{ pkg_src }}
    url: https://{{ goname }}/archive/v{{ version }}.tar.gz
    sha256: bad830ecbb505a5a66b9bfc3284be52029fe7e94153e7019e59e6d01ea3c2091

build:
  number: 1002
  script:
    - pushd {{ pkg_src }}
    - go build -v -o {{ target_gobin }}..{{ os.sep }}{{ plugin_dir }}{{ os.sep }}{{ target_goos }}_{{ target_goarch }}{{ os.sep }}{{ x4_plugin }}{{ target_goexe }}

requirements:
  build:
    - {{ compiler('go') }} 1.13

test:
  requires:
    - terraform >=1

  commands:
    # Create a sample init.tf loading the provider
    - echo 'provider "{{ provider|lower }}" { version="{{ version }}" }' > init.tf  # [unix]
    - echo provider "{{ provider|lower }}" { version="{{ version }}" } > init.tf    # [win]

    # Initialize
    - terraform init --plugin-dir={{ target_gobin }}..{{ os.sep }}plugins

    # Tests that init was successful
    - test -f .terraform.lock.hcl              # [unix]
    - if not exist .terraform.lock.hcl exit 1  # [win]

    # Test that the provider was not downloaded
    - test ! -f .terraform/plugins/{{ plugin_dir }}/{{ target_goos }}_{{ target_goarch }}/README.md  # [unix]
    - if exist .terraform\plugins\{{ plugin_dir }}\{{ target_goos }}_{{ target_goarch }}/README.md exit 1  # [win]

about:
  home: https://www.terraform.io
  license: MPL-2.0
  license_file: {{ pkg_src }}/LICENSE
  summary: The Terraform 1&1 provider
  doc_url: https://www.terraform.io/docs/providers/{{ provider|lower }}/index.html
  dev_url: https://github.com/terraform-providers/{{ name }}

extra:
  recipe-maintainers:
    - conda-forge/terraform
